{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UV\\\\Documents\\\\calendarioreact\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\n// import React, { useRef } from 'react';\n// import FullCalendar from \"@fullcalendar/react\";\n// import DayGridPlugin from \"@fullcalendar/daygrid\";\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\n// import interactionPlugin from \"@fullcalendar/interaction\";\n\n// function Calendar() {\n//     const calendarRef = useRef(null);\n//     //-------- Función para mover al usuario al siguiente mes al dar click en alguno de los dias del mes siguiente visible --------------//\n//     const endMonth = (selectInfo) => {\n//         console.log('Fecha seleccionada:', selectInfo.startStr, ' - ', selectInfo.endStr);\n//         const calendarApi = calendarRef.current.getApi();\n//         calendarApi.gotoDate(selectInfo.startStr);\n//     };\n\n//     return (\n//         <div>\n//             <FullCalendar\n//                 ref={calendarRef}\n//                 plugins={[DayGridPlugin, timeGridPlugin, interactionPlugin]}\n//                 initialView={\"dayGridMonth\"}\n//                 headerToolbar={{\n//                     start: \"today prev,next\",\n//                     center: \"title\",\n//                     end: \"dayGridMonth,timeGridWeek,timeGridDay\",\n//                 }}\n//                 locales={['es']}\n//                 locale=\"es\"\n//                 height={'90vh'}\n//                 selectable={true}\n//                 select={endMonth}\n//                 fixedWeekCount={false}\n//             />\n//         </div>\n//     );\n// }\n\n// export default Calendar;\nimport React, { useState, useRef } from 'react';\nimport FullCalendar from \"@fullcalendar/react\";\nimport DayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport EventPanel from './EventPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [panelOpen, setPanelOpen] = useState(false);\n  const calendarRef = useRef(null);\n  const handleDateClick = arg => {\n    setPanelOpen(true);\n  };\n  const closePanel = () => {\n    setPanelOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        plugins: [DayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"dayGridMonth\",\n        headerToolbar: {\n          start: \"today prev,next\",\n          center: \"title\",\n          end: \"dayGridMonth,timeGridWeek,timeGridDay\"\n        },\n        locales: ['es'],\n        locale: \"es\",\n        height: '90vh',\n        selectable: true,\n        dateClick: handleDateClick,\n        fixedWeekCount: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(EventPanel, {\n        isOpen: panelOpen,\n        onClose: closePanel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"hbGXvR8GGiebEj+DepQzolf7rvU=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useRef","FullCalendar","DayGridPlugin","timeGridPlugin","interactionPlugin","EventPanel","jsxDEV","_jsxDEV","Calendar","_s","panelOpen","setPanelOpen","calendarRef","handleDateClick","arg","closePanel","style","display","children","flex","ref","plugins","initialView","headerToolbar","start","center","end","locales","locale","height","selectable","dateClick","fixedWeekCount","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/UV/Documents/calendarioreact/src/components/Calendar.jsx"],"sourcesContent":["// import React, { useRef } from 'react';\r\n// import FullCalendar from \"@fullcalendar/react\";\r\n// import DayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\r\n// import interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\n// function Calendar() {\r\n//     const calendarRef = useRef(null);\r\n//     //-------- Función para mover al usuario al siguiente mes al dar click en alguno de los dias del mes siguiente visible --------------//\r\n//     const endMonth = (selectInfo) => {\r\n//         console.log('Fecha seleccionada:', selectInfo.startStr, ' - ', selectInfo.endStr);\r\n//         const calendarApi = calendarRef.current.getApi();\r\n//         calendarApi.gotoDate(selectInfo.startStr);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <FullCalendar\r\n//                 ref={calendarRef}\r\n//                 plugins={[DayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n//                 initialView={\"dayGridMonth\"}\r\n//                 headerToolbar={{\r\n//                     start: \"today prev,next\",\r\n//                     center: \"title\",\r\n//                     end: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n//                 }}\r\n//                 locales={['es']}\r\n//                 locale=\"es\"\r\n//                 height={'90vh'}\r\n//                 selectable={true}\r\n//                 select={endMonth}\r\n//                 fixedWeekCount={false}\r\n//             />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Calendar;\r\nimport React, { useState, useRef } from 'react';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport DayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport EventPanel from './EventPanel';\r\n\r\nfunction Calendar() {\r\n    const [panelOpen, setPanelOpen] = useState(false);\r\n    const calendarRef = useRef(null);\r\n\r\n    const handleDateClick = (arg) => {\r\n        setPanelOpen(true);\r\n    };\r\n\r\n    const closePanel = () => {\r\n        setPanelOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <div style={{ flex: 1 }}>\r\n                <FullCalendar\r\n                    ref={calendarRef}\r\n                    plugins={[DayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                    initialView={\"dayGridMonth\"}\r\n                    headerToolbar={{\r\n                        start: \"today prev,next\",\r\n                        center: \"title\",\r\n                        end: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n                    }}\r\n                    locales={['es']}\r\n                    locale=\"es\"\r\n                    height={'90vh'}\r\n                    selectable={true}\r\n                    dateClick={handleDateClick}\r\n                    fixedWeekCount={false}\r\n                />\r\n            </div>\r\n            <div style={{ flex: 1 }}>\r\n                <EventPanel isOpen={panelOpen} onClose={closePanel} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMa,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMa,eAAe,GAAIC,GAAG,IAAK;IAC7BH,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACrBJ,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIJ,OAAA;IAAKS,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5BX,OAAA;MAAKS,KAAK,EAAE;QAAEG,IAAI,EAAE;MAAE,CAAE;MAAAD,QAAA,eACpBX,OAAA,CAACN,YAAY;QACTmB,GAAG,EAAER,WAAY;QACjBS,OAAO,EAAE,CAACnB,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;QAC5DkB,WAAW,EAAE,cAAe;QAC5BC,aAAa,EAAE;UACXC,KAAK,EAAE,iBAAiB;UACxBC,MAAM,EAAE,OAAO;UACfC,GAAG,EAAE;QACT,CAAE;QACFC,OAAO,EAAE,CAAC,IAAI,CAAE;QAChBC,MAAM,EAAC,IAAI;QACXC,MAAM,EAAE,MAAO;QACfC,UAAU,EAAE,IAAK;QACjBC,SAAS,EAAElB,eAAgB;QAC3BmB,cAAc,EAAE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN7B,OAAA;MAAKS,KAAK,EAAE;QAAEG,IAAI,EAAE;MAAE,CAAE;MAAAD,QAAA,eACpBX,OAAA,CAACF,UAAU;QAACgC,MAAM,EAAE3B,SAAU;QAAC4B,OAAO,EAAEvB;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CArCQD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}