{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UV\\\\Documents\\\\calendarioreact\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport FullCalendar from \"@fullcalendar/react\";\nimport DayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport EventPanel from './Panel_events/PanelEvents';\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5'; // Importa el plugin de Bootstrap 5 para FullCalendar\n\n// Importa los estilos de Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [panelOpen, setPanelOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const calendarRef = useRef(null);\n  const handleDateClick = arg => {\n    setSelectedDate(arg.dateStr);\n    setPanelOpen(true);\n  };\n  const closePanel = () => {\n    setPanelOpen(false);\n  };\n  const endMonth = selectInfo => {\n    console.log('Fecha seleccionada:', selectInfo.startStr, ' - ', selectInfo.endStr);\n    const calendarApi = calendarRef.current.getApi();\n    calendarApi.gotoDate(selectInfo.startStr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: panelOpen ? '0 0 70%' : '1'\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        plugins: [DayGridPlugin, timeGridPlugin, interactionPlugin, bootstrap5Plugin],\n        initialView: \"dayGridMonth\",\n        headerToolbar: {\n          start: \"today prev,next\",\n          center: \"title\",\n          end: \"dayGridMonth,timeGridWeek,timeGridDay\"\n        },\n        locales: ['es'],\n        locale: \"es\",\n        height: '90vh',\n        selectable: true,\n        dateClick: handleDateClick,\n        select: endMonth,\n        fixedWeekCount: false,\n        themeSystem: \"bootstrap5\"\n        // Establece el color de la fecha seleccionada\n        ,\n        selectClassNames: ['fc-highlight']\n        // Establece el color de la fecha actual\n        ,\n        nowIndicator: true,\n        nowIndicatorContent: () => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fc-now-indicator fc-highlight\",\n            style: {\n              backgroundColor: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: panelOpen ? '1' : '0',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(EventPanel, {\n        isOpen: panelOpen,\n        onClose: closePanel,\n        selectedDate: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"j3rmDFnW1wL0sbJC9kRTl69ZCXY=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useRef","FullCalendar","DayGridPlugin","timeGridPlugin","interactionPlugin","EventPanel","bootstrap5Plugin","jsxDEV","_jsxDEV","Calendar","_s","panelOpen","setPanelOpen","selectedDate","setSelectedDate","calendarRef","handleDateClick","arg","dateStr","closePanel","endMonth","selectInfo","console","log","startStr","endStr","calendarApi","current","getApi","gotoDate","style","display","children","flex","ref","plugins","initialView","headerToolbar","start","center","end","locales","locale","height","selectable","dateClick","select","fixedWeekCount","themeSystem","selectClassNames","nowIndicator","nowIndicatorContent","className","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/UV/Documents/calendarioreact/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport DayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport EventPanel from './Panel_events/PanelEvents';\r\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5'; // Importa el plugin de Bootstrap 5 para FullCalendar\r\n\r\n// Importa los estilos de Bootstrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nfunction Calendar() {\r\n    const [panelOpen, setPanelOpen] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const calendarRef = useRef(null);\r\n\r\n    const handleDateClick = (arg) => {\r\n        setSelectedDate(arg.dateStr);\r\n        setPanelOpen(true);\r\n    };\r\n\r\n    const closePanel = () => {\r\n        setPanelOpen(false);\r\n    };\r\n\r\n    const endMonth = (selectInfo) => {\r\n        console.log('Fecha seleccionada:', selectInfo.startStr, ' - ', selectInfo.endStr);\r\n        const calendarApi = calendarRef.current.getApi();\r\n        calendarApi.gotoDate(selectInfo.startStr);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <div style={{ flex: panelOpen ? '0 0 70%' : '1' }}>\r\n                <FullCalendar\r\n                    ref={calendarRef}\r\n                    plugins={[DayGridPlugin, timeGridPlugin, interactionPlugin, bootstrap5Plugin]}\r\n                    initialView={\"dayGridMonth\"}\r\n                    headerToolbar={{\r\n                        start: \"today prev,next\",\r\n                        center: \"title\",\r\n                        end: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n                    }}\r\n                    locales={['es']}\r\n                    locale=\"es\"\r\n                    height={'90vh'}\r\n                    selectable={true}\r\n                    dateClick={handleDateClick}\r\n                    select={endMonth}\r\n                    fixedWeekCount={false}\r\n                    themeSystem=\"bootstrap5\"\r\n                    // Establece el color de la fecha seleccionada\r\n                    selectClassNames={['fc-highlight']}\r\n                    // Establece el color de la fecha actual\r\n                    nowIndicator={true}\r\n                    nowIndicatorContent={() => {\r\n                        return (\r\n                            <div className=\"fc-now-indicator fc-highlight\" style={{ backgroundColor: 'green' }} />\r\n                        );\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{ flex: panelOpen ? '1' : '0', overflowY: 'auto' }}>\r\n                <EventPanel isOpen={panelOpen} onClose={closePanel} selectedDate={selectedDate} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}